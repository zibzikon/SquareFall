//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PreparingToPlayListenerComponent preparingToPlayListener { get { return (PreparingToPlayListenerComponent)GetComponent(GameComponentsLookup.PreparingToPlayListener); } }
    public bool hasPreparingToPlayListener { get { return HasComponent(GameComponentsLookup.PreparingToPlayListener); } }

    public void AddPreparingToPlayListener(System.Collections.Generic.List<IPreparingToPlayListener> newValue) {
        var index = GameComponentsLookup.PreparingToPlayListener;
        var component = (PreparingToPlayListenerComponent)CreateComponent(index, typeof(PreparingToPlayListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePreparingToPlayListener(System.Collections.Generic.List<IPreparingToPlayListener> newValue) {
        var index = GameComponentsLookup.PreparingToPlayListener;
        var component = (PreparingToPlayListenerComponent)CreateComponent(index, typeof(PreparingToPlayListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePreparingToPlayListener() {
        RemoveComponent(GameComponentsLookup.PreparingToPlayListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPreparingToPlayListener;

    public static Entitas.IMatcher<GameEntity> PreparingToPlayListener {
        get {
            if (_matcherPreparingToPlayListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PreparingToPlayListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPreparingToPlayListener = matcher;
            }

            return _matcherPreparingToPlayListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddPreparingToPlayListener(IPreparingToPlayListener value) {
        var listeners = hasPreparingToPlayListener
            ? preparingToPlayListener.value
            : new System.Collections.Generic.List<IPreparingToPlayListener>();
        listeners.Add(value);
        ReplacePreparingToPlayListener(listeners);
    }

    public void RemovePreparingToPlayListener(IPreparingToPlayListener value, bool removeComponentWhenEmpty = true) {
        var listeners = preparingToPlayListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemovePreparingToPlayListener();
        } else {
            ReplacePreparingToPlayListener(listeners);
        }
    }
}
