//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigurationContext {

    public ConfigurationEntity gameConfigurationEntity { get { return GetGroup(ConfigurationMatcher.GameConfiguration).GetSingleEntity(); } }

    public bool isGameConfiguration {
        get { return gameConfigurationEntity != null; }
        set {
            var entity = gameConfigurationEntity;
            if (value != (entity != null)) {
                if (value) {
                    CreateEntity().isGameConfiguration = true;
                } else {
                    entity.Destroy();
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigurationEntity {

    static readonly Kernel.Components.GameConfiguration gameConfigurationComponent = new Kernel.Components.GameConfiguration();

    public bool isGameConfiguration {
        get { return HasComponent(ConfigurationComponentsLookup.GameConfiguration); }
        set {
            if (value != isGameConfiguration) {
                var index = ConfigurationComponentsLookup.GameConfiguration;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : gameConfigurationComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigurationMatcher {

    static Entitas.IMatcher<ConfigurationEntity> _matcherGameConfiguration;

    public static Entitas.IMatcher<ConfigurationEntity> GameConfiguration {
        get {
            if (_matcherGameConfiguration == null) {
                var matcher = (Entitas.Matcher<ConfigurationEntity>)Entitas.Matcher<ConfigurationEntity>.AllOf(ConfigurationComponentsLookup.GameConfiguration);
                matcher.componentNames = ConfigurationComponentsLookup.componentNames;
                _matcherGameConfiguration = matcher;
            }

            return _matcherGameConfiguration;
        }
    }
}
